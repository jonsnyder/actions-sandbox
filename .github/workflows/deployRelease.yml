name: Deploy Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version"
        required: true
concurrency: deploy-${{ github.ref }}

jobs:
  validate:
    name: "Validate"
    runs-on: ubuntu-latest
    steps:
      - uses: adobe/project-card-release-automation/validate-version@githubReleaseNotes
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ github.event.inputs.version }}
  release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: validate
    environment: Deploy
    if: ${{ contains(github.event.inputs.version, '-') == false }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 15.x
      - uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.ALLOY_BOT_SSH_PRIVATE_KEY }}
      - run: ./scripts/deploy.sh ${{ github.event.inputs.version }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./index.js
  prerelease:
    name: "Prerelease"
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ contains(github.event.inputs.version, '-') }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 15.x
      - uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.ALLOY_BOT_SSH_PRIVATE_KEY }}
      - run: ./scripts/deploy.sh ${{ github.event.inputs.version }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./index.js
  record:
    name: "Record Version"
    runs-on: ubuntu-latest
    needs: [prerelease, release]
    if: failure() == false
    steps:
      - uses: adobe/project-card-release-automation/record-release@githubReleaseNotes
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ github.event.inputs.version }}
